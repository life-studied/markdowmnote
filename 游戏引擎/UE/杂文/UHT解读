# UHT解读

​	一般UBT会收集头文件中的信息，并传递给UHT，来生成对应的`classname.generated.h`。一般生成的地址不在和源代码同级，而是在`Intermediate\Build\Win64\UE4Editor\Development\MODULE_NAME`下。

## UHT如何引入代码

​	UHT一般根据收获的标记信息，生成对应的代码，一般是一堆宏定义。在头文件`include`的最后包含的就是生成文件，并通过`GENERATE_BODY()`宏引进生成的宏代码，引入的代码会自动内嵌在类的内部。

​	关于`GENERATE_BODY()`宏：这个宏会根据所在文件和行数生成一个独有的ID宏，这个独有的ID宏实际将由UHT定义在`classname.generated.h`中。

```C++
#define GENERATED_BODY(...) BODY_MACRO_COMBINE(CURRENT_FILE_ID,_,__LINE__,_GENERATED_BODY);

// example: generated in UHT header
#define FID_codeSpace_IDE_Project_UEProjects_MyProject_Source_MyProject_test_h_13_GENERATED_BODY \
...
```

## UHT标记

​	简单判断是否是UHT标记的方法就是，检查这个标记的定义是否是空宏。(`Runtime\CoreUObject\Public\ObjectMacros.h`)

```C++
// Runtime\CoreUObject\Public\ObjectMacros.h
// ...
// These macros wrap metadata parsed by the Unreal Header Tool, and are otherwise
// ignored when code containing them is compiled by the C++ compiler
#define UPROPERTY(...)
#define UFUNCTION(...)
#define USTRUCT(...)
#define UMETA(...)
#define UPARAM(...)
#define UENUM(...)
#define UDELEGATE(...)

// This pair of macros is used to help implement GENERATED_BODY() and GENERATED_USTRUCT_BODY()
#define BODY_MACRO_COMBINE_INNER(A,B,C,D) A##B##C##D
#define BODY_MACRO_COMBINE(A,B,C,D) BODY_MACRO_COMBINE_INNER(A,B,C,D)

// Include a redundant semicolon at the end of the generated code block, so that intellisense parsers can start parsing
// a new declaration if the line number/generated code is out of date.
#define GENERATED_BODY_LEGACY(...) BODY_MACRO_COMBINE(CURRENT_FILE_ID,_,__LINE__,_GENERATED_BODY_LEGACY);
#define GENERATED_BODY(...) BODY_MACRO_COMBINE(CURRENT_FILE_ID,_,__LINE__,_GENERATED_BODY);

#define GENERATED_USTRUCT_BODY(...) GENERATED_BODY()
#define GENERATED_UCLASS_BODY(...) GENERATED_BODY_LEGACY()
#define GENERATED_UINTERFACE_BODY(...) GENERATED_BODY_LEGACY()
#define GENERATED_IINTERFACE_BODY(...) GENERATED_BODY_LEGACY()

#if UE_BUILD_DOCS || defined(__INTELLISENSE__)
#define UCLASS(...)
#else
#define UCLASS(...) BODY_MACRO_COMBINE(CURRENT_FILE_ID,_,__LINE__,_PROLOG)
#endif

#define UINTERFACE(...) UCLASS()
// ...
```

## UHT生成时机

​	相比于C++标准编译流程而言，UHT在**所有的流程之前生成**，也就是说，在**预处理之前**就已经完成了代码的生成。

​	注意：因此，不能用宏来包含UHT的标记宏，例如`GENERATE_BODY()`，`UPROPERTY()`等。